import 'dart:convert';
import 'package:flutter_salesman_module/models/autogenerate_model.dart';
import 'package:flutter_salesman_module/models/token_model.dart';
import 'package:flutter_salesman_module/utils/constants/app_url.dart';
import 'package:http/http.dart' as http;

class LoginApi {
  /// ********************
  /// getLoginToken
  /// ********************
  static Future<UserModel> getLoginToken(
    String username,
    String password,
    String date,
  ) async {
    try {
      String loginUrl = AppUrl.login;
      print("Using URL: $loginUrl");

      final headers = {
        'Content-Type': 'application/json',
        'username': username,
        'password': password,
        'date': date,
      };

      print("Request headers:");
      headers.forEach((k, v) => print("  $k: $v"));

      final response = await http
          .get(Uri.parse(loginUrl), headers: headers)
          .timeout(const Duration(minutes: 2));

      print("Response status code: ${response.statusCode}");
      print("Response body:");
      print(response.body);

      if (response.statusCode == 200) {
        final data = UserModel.fromJson(json.decode(response.body));
        print("Parsed token: ${data.token}");
        return data;
      } else {
        throw Exception("${response.body}");
      }
    } catch (error, stacktrace) {
      rethrow;
    }
  }

  static Future<Autogenerated> getChannelData(
    String username,
    String token,
    String date,
    String userId,
  ) async {
    print("getLoginToken called with:");
    print("  username: $username");
    print("  password: $token");
    print("  date: $date");
    print("  userId: $userId");
    try {
      String loginUrl = "${AppUrl.channelData}?userid=$userId";
      print("Using URL: $loginUrl");

      final headers = {
        'Content-Type': 'application/json',
        'username': username,
        'token': token,
        'date': date,
      };

      print("Request headers:");
      headers.forEach((k, v) => print("  $k: $v"));

      final response = await http
          .get(Uri.parse(loginUrl), headers: headers)
          .timeout(const Duration(minutes: 2));

      print("Response status code: ${response.statusCode}");
      print("Response body:");
      print(response.body);

      if (response.statusCode == 200) {
        final data = Autogenerated.fromJson(json.decode(response.body));

        return data;
      } else {
        throw Exception("${response.body}");
      }
    } catch (error, stacktrace) {
      print("Error during login:");
      print(error);
      print("Stacktrace:");
      print(stacktrace);
      rethrow;
    }
  }
}
